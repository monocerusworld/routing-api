import { S3 } from 'aws-sdk';
import axios from 'axios';
import { default as bunyan } from 'bunyan';
const TOKEN_LISTS = [
    'https://raw.githubusercontent.com/The-Blockchain-Association/sec-notice-list/master/ba-sec-list.json',
    'https://tokens.coingecko.com/uniswap/all.json',
    'https://gateway.ipfs.io/ipns/tokens.uniswap.org',
];
const handler = async (event) => {
    const log = bunyan.createLogger({
        name: 'TokenListLambda',
        serializers: bunyan.stdSerializers,
        level: 'info',
        requestId: event.id,
    });
    const s3 = new S3();
    for (const tokenListURI of TOKEN_LISTS) {
        log.info(`Getting tokenList from ${tokenListURI}.`);
        try {
            const { data: tokenList } = await axios.get(tokenListURI);
            log.info(`Got tokenList from ${tokenListURI}.`);
            await s3
                .putObject({
                Bucket: process.env.TOKEN_LIST_CACHE_BUCKET,
                Key: encodeURIComponent(tokenListURI),
                Body: JSON.stringify(tokenList),
            })
                .promise();
        }
        catch (err) {
            log.error({ err }, `Could not get tokenlist ${tokenListURI}`);
        }
    }
};
module.exports = { handler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUtdG9rZW4tbGlzdHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvY3Jvbi9jYWNoZS10b2tlbi1saXN0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sU0FBUyxDQUFBO0FBQzVCLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQTtBQUN6QixPQUFPLEVBQUUsT0FBTyxJQUFJLE1BQU0sRUFBcUIsTUFBTSxRQUFRLENBQUE7QUFFN0QsTUFBTSxXQUFXLEdBQUc7SUFDbEIsc0dBQXNHO0lBQ3RHLCtDQUErQztJQUMvQyxpREFBaUQ7Q0FDbEQsQ0FBQTtBQUVELE1BQU0sT0FBTyxHQUFxQixLQUFLLEVBQUUsS0FBcUMsRUFBRSxFQUFFO0lBQ2hGLE1BQU0sR0FBRyxHQUFXLE1BQU0sQ0FBQyxZQUFZLENBQUM7UUFDdEMsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixXQUFXLEVBQUUsTUFBTSxDQUFDLGNBQWM7UUFDbEMsS0FBSyxFQUFFLE1BQU07UUFDYixTQUFTLEVBQUUsS0FBSyxDQUFDLEVBQUU7S0FDcEIsQ0FBQyxDQUFBO0lBQ0YsTUFBTSxFQUFFLEdBQUcsSUFBSSxFQUFFLEVBQUUsQ0FBQTtJQUVuQixLQUFLLE1BQU0sWUFBWSxJQUFJLFdBQVcsRUFBRTtRQUN0QyxHQUFHLENBQUMsSUFBSSxDQUFDLDBCQUEwQixZQUFZLEdBQUcsQ0FBQyxDQUFBO1FBQ25ELElBQUk7WUFDRixNQUFNLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxHQUFHLE1BQU0sS0FBSyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQTtZQUN6RCxHQUFHLENBQUMsSUFBSSxDQUFDLHNCQUFzQixZQUFZLEdBQUcsQ0FBQyxDQUFBO1lBRS9DLE1BQU0sRUFBRTtpQkFDTCxTQUFTLENBQUM7Z0JBQ1QsTUFBTSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXdCO2dCQUM1QyxHQUFHLEVBQUUsa0JBQWtCLENBQUMsWUFBWSxDQUFDO2dCQUNyQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUM7YUFDaEMsQ0FBQztpQkFDRCxPQUFPLEVBQUUsQ0FBQTtTQUNiO1FBQUMsT0FBTyxHQUFHLEVBQUU7WUFDWixHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsMkJBQTJCLFlBQVksRUFBRSxDQUFDLENBQUE7U0FDOUQ7S0FDRjtBQUNILENBQUMsQ0FBQTtBQUVELE1BQU0sQ0FBQyxPQUFPLEdBQUcsRUFBRSxPQUFPLEVBQUUsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50QnJpZGdlRXZlbnQsIFNjaGVkdWxlZEhhbmRsZXIgfSBmcm9tICdhd3MtbGFtYmRhJ1xuaW1wb3J0IHsgUzMgfSBmcm9tICdhd3Mtc2RrJ1xuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJ1xuaW1wb3J0IHsgZGVmYXVsdCBhcyBidW55YW4sIGRlZmF1bHQgYXMgTG9nZ2VyIH0gZnJvbSAnYnVueWFuJ1xuXG5jb25zdCBUT0tFTl9MSVNUUyA9IFtcbiAgJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9UaGUtQmxvY2tjaGFpbi1Bc3NvY2lhdGlvbi9zZWMtbm90aWNlLWxpc3QvbWFzdGVyL2JhLXNlYy1saXN0Lmpzb24nLFxuICAnaHR0cHM6Ly90b2tlbnMuY29pbmdlY2tvLmNvbS91bmlzd2FwL2FsbC5qc29uJyxcbiAgJ2h0dHBzOi8vZ2F0ZXdheS5pcGZzLmlvL2lwbnMvdG9rZW5zLnVuaXN3YXAub3JnJyxcbl1cblxuY29uc3QgaGFuZGxlcjogU2NoZWR1bGVkSGFuZGxlciA9IGFzeW5jIChldmVudDogRXZlbnRCcmlkZ2VFdmVudDxzdHJpbmcsIHZvaWQ+KSA9PiB7XG4gIGNvbnN0IGxvZzogTG9nZ2VyID0gYnVueWFuLmNyZWF0ZUxvZ2dlcih7XG4gICAgbmFtZTogJ1Rva2VuTGlzdExhbWJkYScsXG4gICAgc2VyaWFsaXplcnM6IGJ1bnlhbi5zdGRTZXJpYWxpemVycyxcbiAgICBsZXZlbDogJ2luZm8nLFxuICAgIHJlcXVlc3RJZDogZXZlbnQuaWQsXG4gIH0pXG4gIGNvbnN0IHMzID0gbmV3IFMzKClcblxuICBmb3IgKGNvbnN0IHRva2VuTGlzdFVSSSBvZiBUT0tFTl9MSVNUUykge1xuICAgIGxvZy5pbmZvKGBHZXR0aW5nIHRva2VuTGlzdCBmcm9tICR7dG9rZW5MaXN0VVJJfS5gKVxuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGRhdGE6IHRva2VuTGlzdCB9ID0gYXdhaXQgYXhpb3MuZ2V0KHRva2VuTGlzdFVSSSlcbiAgICAgIGxvZy5pbmZvKGBHb3QgdG9rZW5MaXN0IGZyb20gJHt0b2tlbkxpc3RVUkl9LmApXG5cbiAgICAgIGF3YWl0IHMzXG4gICAgICAgIC5wdXRPYmplY3Qoe1xuICAgICAgICAgIEJ1Y2tldDogcHJvY2Vzcy5lbnYuVE9LRU5fTElTVF9DQUNIRV9CVUNLRVQhLFxuICAgICAgICAgIEtleTogZW5jb2RlVVJJQ29tcG9uZW50KHRva2VuTGlzdFVSSSksXG4gICAgICAgICAgQm9keTogSlNPTi5zdHJpbmdpZnkodG9rZW5MaXN0KSxcbiAgICAgICAgfSlcbiAgICAgICAgLnByb21pc2UoKVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgbG9nLmVycm9yKHsgZXJyIH0sIGBDb3VsZCBub3QgZ2V0IHRva2VubGlzdCAke3Rva2VuTGlzdFVSSX1gKVxuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHsgaGFuZGxlciB9XG4iXX0=