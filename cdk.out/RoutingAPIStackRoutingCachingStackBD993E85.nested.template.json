{
 "Resources": {
  "PoolCacheBucketD80D665F": {
   "Type": "AWS::S3::Bucket",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/PoolCacheBucket/Resource"
   }
  },
  "PoolCacheBucket20A883DAA": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "LifecycleConfiguration": {
     "Rules": [
      {
       "ExpirationInDays": 1,
       "Status": "Enabled"
      }
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/PoolCacheBucket2/Resource"
   }
  },
  "RoutingLambdaRole270B0918": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingLambdaRole/Resource"
   }
  },
  "RoutingLambdaRoleDefaultPolicyB8EDD428": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PoolCacheBucket20A883DAA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PoolCacheBucket20A883DAA",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TokenListCacheBucketB0AEA45C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TokenListCacheBucketB0AEA45C",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RoutingLambdaRoleDefaultPolicyB8EDD428",
    "Roles": [
     {
      "Ref": "RoutingLambdaRole270B0918"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingLambdaRole/DefaultPolicy/Resource"
   }
  },
  "PoolCacheLambdaChainId1ProtocolV32F9F3DC1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ec1df2b8330c06cbf94d1e938ae412cb4eb5d8f432ca044c5ee318ba267129eb.zip"
    },
    "Description": "Pool Cache Lambda for Chain with ChainId 1 and Protocol V3",
    "Environment": {
     "Variables": {
      "POOL_CACHE_BUCKET": {
       "Ref": "PoolCacheBucketD80D665F"
      },
      "POOL_CACHE_BUCKET_2": {
       "Ref": "PoolCacheBucket20A883DAA"
      },
      "POOL_CACHE_KEY": "poolCache.json",
      "chainId": "1",
      "protocol": "V3",
      "timeout": "90000",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension:14"
       ]
      ]
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "RoutingLambdaRole270B0918",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x",
    "Timeout": 900,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "RoutingLambdaRoleDefaultPolicyB8EDD428",
    "RoutingLambdaRole270B0918"
   ],
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/PoolCacheLambda-ChainId1-ProtocolV3/Resource",
    "aws:asset:path": "asset.ec1df2b8330c06cbf94d1e938ae412cb4eb5d8f432ca044c5ee318ba267129eb",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SchedulePoolCacheChainId1ProtocolV3CB1BF387": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(15 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "PoolCacheLambdaChainId1ProtocolV32F9F3DC1",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/SchedulePoolCache-ChainId1-ProtocolV3/Resource"
   }
  },
  "SchedulePoolCacheChainId1ProtocolV3AllowEventRuleRoutingAPIStackRoutingCachingStackPoolCacheLambdaChainId1ProtocolV39B27EF32ADDC2813": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PoolCacheLambdaChainId1ProtocolV32F9F3DC1",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "SchedulePoolCacheChainId1ProtocolV3CB1BF387",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/SchedulePoolCache-ChainId1-ProtocolV3/AllowEventRuleRoutingAPIStackRoutingCachingStackPoolCacheLambdaChainId1ProtocolV39B27EF32"
   }
  },
  "RoutingAPISEV4PoolCacheToS3LambdaErrorRateChainId1ProtocolV3DC311576": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 12,
    "Metrics": [
     {
      "Expression": "(invocations - errors) < 1",
      "Id": "expr_1"
     },
     {
      "Id": "invocations",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "PoolCacheLambdaChainId1ProtocolV32F9F3DC1"
          }
         }
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "errors",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "PoolCacheLambdaChainId1ProtocolV32F9F3DC1"
          }
         }
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 50
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingAPI-SEV4-PoolCacheToS3LambdaErrorRate-ChainId1-ProtocolV3/Resource"
   }
  },
  "RoutingAPIPoolCacheToS3LambdaThrottlesChainId1ProtocolV3A224567C": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "FunctionName",
      "Value": {
       "Ref": "PoolCacheLambdaChainId1ProtocolV32F9F3DC1"
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "Throttles",
    "Namespace": "AWS/Lambda",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 5
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingAPI-PoolCacheToS3LambdaThrottles-ChainId1-ProtocolV3/Resource"
   }
  },
  "PoolCacheLambdaChainId169ProtocolV38461AD2C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ec1df2b8330c06cbf94d1e938ae412cb4eb5d8f432ca044c5ee318ba267129eb.zip"
    },
    "Description": "Pool Cache Lambda for Chain with ChainId 169 and Protocol V3",
    "Environment": {
     "Variables": {
      "POOL_CACHE_BUCKET": {
       "Ref": "PoolCacheBucketD80D665F"
      },
      "POOL_CACHE_BUCKET_2": {
       "Ref": "PoolCacheBucket20A883DAA"
      },
      "POOL_CACHE_KEY": "poolCache.json",
      "chainId": "169",
      "protocol": "V3",
      "timeout": "90000",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension:14"
       ]
      ]
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "RoutingLambdaRole270B0918",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x",
    "Timeout": 900,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "RoutingLambdaRoleDefaultPolicyB8EDD428",
    "RoutingLambdaRole270B0918"
   ],
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/PoolCacheLambda-ChainId169-ProtocolV3/Resource",
    "aws:asset:path": "asset.ec1df2b8330c06cbf94d1e938ae412cb4eb5d8f432ca044c5ee318ba267129eb",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SchedulePoolCacheChainId169ProtocolV3316EA387": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(15 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "PoolCacheLambdaChainId169ProtocolV38461AD2C",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/SchedulePoolCache-ChainId169-ProtocolV3/Resource"
   }
  },
  "SchedulePoolCacheChainId169ProtocolV3AllowEventRuleRoutingAPIStackRoutingCachingStackPoolCacheLambdaChainId169ProtocolV312741F6FDED6ACC6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PoolCacheLambdaChainId169ProtocolV38461AD2C",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "SchedulePoolCacheChainId169ProtocolV3316EA387",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/SchedulePoolCache-ChainId169-ProtocolV3/AllowEventRuleRoutingAPIStackRoutingCachingStackPoolCacheLambdaChainId169ProtocolV312741F6F"
   }
  },
  "RoutingAPISEV4PoolCacheToS3LambdaErrorRateChainId169ProtocolV30388E167": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 12,
    "Metrics": [
     {
      "Expression": "(invocations - errors) < 1",
      "Id": "expr_1"
     },
     {
      "Id": "invocations",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "PoolCacheLambdaChainId169ProtocolV38461AD2C"
          }
         }
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "errors",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "PoolCacheLambdaChainId169ProtocolV38461AD2C"
          }
         }
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 50
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingAPI-SEV4-PoolCacheToS3LambdaErrorRate-ChainId169-ProtocolV3/Resource"
   }
  },
  "RoutingAPIPoolCacheToS3LambdaThrottlesChainId169ProtocolV35F10C2DE": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "FunctionName",
      "Value": {
       "Ref": "PoolCacheLambdaChainId169ProtocolV38461AD2C"
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "Throttles",
    "Namespace": "AWS/Lambda",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 5
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingAPI-PoolCacheToS3LambdaThrottles-ChainId169-ProtocolV3/Resource"
   }
  },
  "PoolCacheLambdaChainId3441005ProtocolV3AA43CE3A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ec1df2b8330c06cbf94d1e938ae412cb4eb5d8f432ca044c5ee318ba267129eb.zip"
    },
    "Description": "Pool Cache Lambda for Chain with ChainId 3441005 and Protocol V3",
    "Environment": {
     "Variables": {
      "POOL_CACHE_BUCKET": {
       "Ref": "PoolCacheBucketD80D665F"
      },
      "POOL_CACHE_BUCKET_2": {
       "Ref": "PoolCacheBucket20A883DAA"
      },
      "POOL_CACHE_KEY": "poolCache.json",
      "chainId": "3441005",
      "protocol": "V3",
      "timeout": "90000",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension:14"
       ]
      ]
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "RoutingLambdaRole270B0918",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x",
    "Timeout": 900,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "RoutingLambdaRoleDefaultPolicyB8EDD428",
    "RoutingLambdaRole270B0918"
   ],
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/PoolCacheLambda-ChainId3441005-ProtocolV3/Resource",
    "aws:asset:path": "asset.ec1df2b8330c06cbf94d1e938ae412cb4eb5d8f432ca044c5ee318ba267129eb",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SchedulePoolCacheChainId3441005ProtocolV3319FA34D": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(15 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "PoolCacheLambdaChainId3441005ProtocolV3AA43CE3A",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/SchedulePoolCache-ChainId3441005-ProtocolV3/Resource"
   }
  },
  "SchedulePoolCacheChainId3441005ProtocolV3AllowEventRuleRoutingAPIStackRoutingCachingStackPoolCacheLambdaChainId3441005ProtocolV37D7AE0096959B4F6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PoolCacheLambdaChainId3441005ProtocolV3AA43CE3A",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "SchedulePoolCacheChainId3441005ProtocolV3319FA34D",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/SchedulePoolCache-ChainId3441005-ProtocolV3/AllowEventRuleRoutingAPIStackRoutingCachingStackPoolCacheLambdaChainId3441005ProtocolV37D7AE009"
   }
  },
  "RoutingAPISEV4PoolCacheToS3LambdaErrorRateChainId3441005ProtocolV3E2322D53": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 12,
    "Metrics": [
     {
      "Expression": "(invocations - errors) < 1",
      "Id": "expr_1"
     },
     {
      "Id": "invocations",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "PoolCacheLambdaChainId3441005ProtocolV3AA43CE3A"
          }
         }
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "errors",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "PoolCacheLambdaChainId3441005ProtocolV3AA43CE3A"
          }
         }
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 50
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingAPI-SEV4-PoolCacheToS3LambdaErrorRate-ChainId3441005-ProtocolV3/Resource"
   }
  },
  "RoutingAPIPoolCacheToS3LambdaThrottlesChainId3441005ProtocolV3526E568F": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "FunctionName",
      "Value": {
       "Ref": "PoolCacheLambdaChainId3441005ProtocolV3AA43CE3A"
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "Throttles",
    "Namespace": "AWS/Lambda",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 5
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingAPI-PoolCacheToS3LambdaThrottles-ChainId3441005-ProtocolV3/Resource"
   }
  },
  "PoolCacheLambdaChainId1ProtocolV2C4BB0AD5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ec1df2b8330c06cbf94d1e938ae412cb4eb5d8f432ca044c5ee318ba267129eb.zip"
    },
    "Description": "Pool Cache Lambda for Chain with ChainId 1 and Protocol V2",
    "Environment": {
     "Variables": {
      "POOL_CACHE_BUCKET": {
       "Ref": "PoolCacheBucketD80D665F"
      },
      "POOL_CACHE_BUCKET_2": {
       "Ref": "PoolCacheBucket20A883DAA"
      },
      "POOL_CACHE_KEY": "poolCache.json",
      "chainId": "1",
      "protocol": "V2",
      "timeout": "840000",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension:14"
       ]
      ]
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "RoutingLambdaRole270B0918",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x",
    "Timeout": 900,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "RoutingLambdaRoleDefaultPolicyB8EDD428",
    "RoutingLambdaRole270B0918"
   ],
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/PoolCacheLambda-ChainId1-ProtocolV2/Resource",
    "aws:asset:path": "asset.ec1df2b8330c06cbf94d1e938ae412cb4eb5d8f432ca044c5ee318ba267129eb",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SchedulePoolCacheChainId1ProtocolV22F5DCD1A": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(15 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "PoolCacheLambdaChainId1ProtocolV2C4BB0AD5",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/SchedulePoolCache-ChainId1-ProtocolV2/Resource"
   }
  },
  "SchedulePoolCacheChainId1ProtocolV2AllowEventRuleRoutingAPIStackRoutingCachingStackPoolCacheLambdaChainId1ProtocolV218926682F2CA4DF9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PoolCacheLambdaChainId1ProtocolV2C4BB0AD5",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "SchedulePoolCacheChainId1ProtocolV22F5DCD1A",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/SchedulePoolCache-ChainId1-ProtocolV2/AllowEventRuleRoutingAPIStackRoutingCachingStackPoolCacheLambdaChainId1ProtocolV218926682"
   }
  },
  "RoutingAPISEV4PoolCacheToS3LambdaErrorRateChainId1ProtocolV286E8E5A9": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 144,
    "Metrics": [
     {
      "Expression": "(invocations - errors) < 1",
      "Id": "expr_1"
     },
     {
      "Id": "invocations",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "PoolCacheLambdaChainId1ProtocolV2C4BB0AD5"
          }
         }
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "errors",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "PoolCacheLambdaChainId1ProtocolV2C4BB0AD5"
          }
         }
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 85
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingAPI-SEV4-PoolCacheToS3LambdaErrorRate-ChainId1-ProtocolV2/Resource"
   }
  },
  "RoutingAPIPoolCacheToS3LambdaThrottlesChainId1ProtocolV239B5EB22": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "FunctionName",
      "Value": {
       "Ref": "PoolCacheLambdaChainId1ProtocolV2C4BB0AD5"
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "Throttles",
    "Namespace": "AWS/Lambda",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 5
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingAPI-PoolCacheToS3LambdaThrottles-ChainId1-ProtocolV2/Resource"
   }
  },
  "TokenListCacheBucketB0AEA45C": {
   "Type": "AWS::S3::Bucket",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/TokenListCacheBucket/Resource"
   }
  },
  "TokenListCacheLambda8F76F145": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2a7953772596e45115d39226b99d526d5aca60531e32f2ea9ab9e0361ae29e34.zip"
    },
    "Description": "Token List Cache Lambda",
    "Environment": {
     "Variables": {
      "TOKEN_LIST_CACHE_BUCKET": {
       "Ref": "TokenListCacheBucketB0AEA45C"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension:14"
       ]
      ]
     }
    ],
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "RoutingLambdaRole270B0918",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x",
    "Timeout": 180,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "RoutingLambdaRoleDefaultPolicyB8EDD428",
    "RoutingLambdaRole270B0918"
   ],
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/TokenListCacheLambda/Resource",
    "aws:asset:path": "asset.2a7953772596e45115d39226b99d526d5aca60531e32f2ea9ab9e0361ae29e34",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ScheduleTokenListCacheC8724872": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(15 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "TokenListCacheLambda8F76F145",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/ScheduleTokenListCache/Resource"
   }
  },
  "ScheduleTokenListCacheAllowEventRuleRoutingAPIStackRoutingCachingStackTokenListCacheLambda94A9004E1588C34D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenListCacheLambda8F76F145",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "ScheduleTokenListCacheC8724872",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/ScheduleTokenListCache/AllowEventRuleRoutingAPIStackRoutingCachingStackTokenListCacheLambda94A9004E"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/z2OS27DMAxEz5K9zMbNpl0mBroMAucAhiLRKW19AFOKUQi6eyHZ7eoNMUMO36FtWzge5MqN0nNj6AHpihxQ34NUs5ArD4lPkC5RzRhEN7pdbbhIxixIWki9N1j8yps3pH7KuKksjLQPLQfnNU4M14qv6FQg7wSfBsmMgeFcsIchdaP7z5RbuFhiJu+ywBe6wJD6uNdGg1ko46NeZVDfkM5GLrZYVeQsemQfF4WiltyDfJJ71t0/oxtd552mUCvKrzDx26v9gPYTjoeJiZolukAWod/4CzWCdVlDAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Outputs": {
  "RoutingAPIStackRoutingCachingStackPoolCacheBucket620A121AArn": {
   "Value": {
    "Fn::GetAtt": [
     "PoolCacheBucketD80D665F",
     "Arn"
    ]
   }
  },
  "RoutingAPIStackRoutingCachingStackPoolCacheBucket28CA80A17Arn": {
   "Value": {
    "Fn::GetAtt": [
     "PoolCacheBucket20A883DAA",
     "Arn"
    ]
   }
  },
  "RoutingAPIStackRoutingCachingStackTokenListCacheBucket5B090E54Arn": {
   "Value": {
    "Fn::GetAtt": [
     "TokenListCacheBucketB0AEA45C",
     "Arn"
    ]
   }
  },
  "RoutingAPIStackRoutingCachingStackPoolCacheBucket620A121ARef": {
   "Value": {
    "Ref": "PoolCacheBucketD80D665F"
   }
  },
  "RoutingAPIStackRoutingCachingStackPoolCacheBucket28CA80A17Ref": {
   "Value": {
    "Ref": "PoolCacheBucket20A883DAA"
   }
  },
  "RoutingAPIStackRoutingCachingStackTokenListCacheBucket5B090E54Ref": {
   "Value": {
    "Ref": "TokenListCacheBucketB0AEA45C"
   }
  },
  "RoutingAPIStackRoutingCachingStackPoolCacheLambdaChainId1ProtocolV3556BA5B9Ref": {
   "Value": {
    "Ref": "PoolCacheLambdaChainId1ProtocolV32F9F3DC1"
   }
  },
  "RoutingAPIStackRoutingCachingStackPoolCacheLambdaChainId169ProtocolV35359872ERef": {
   "Value": {
    "Ref": "PoolCacheLambdaChainId169ProtocolV38461AD2C"
   }
  },
  "RoutingAPIStackRoutingCachingStackPoolCacheLambdaChainId3441005ProtocolV3E6467D47Ref": {
   "Value": {
    "Ref": "PoolCacheLambdaChainId3441005ProtocolV3AA43CE3A"
   }
  },
  "RoutingAPIStackRoutingCachingStackPoolCacheLambdaChainId1ProtocolV21B153C9DRef": {
   "Value": {
    "Ref": "PoolCacheLambdaChainId1ProtocolV2C4BB0AD5"
   }
  }
 }
}