/// <reference types="node" />
import { RequestOptions } from 'http';
/**
 * Fetch data from a remote HTTP endpoint with the provided headers.
 *
 * @param options - HTTP request options
 */
declare const fetch: (options: RequestOptions) => Promise<Buffer>;
/**
 * Fetch a string from a remote HTTP endpoint with the provided headers.
 *
 * @param options - HTTP request options
 */
declare const fetchString: (options: RequestOptions) => Promise<string>;
/**
 * Fetch JSON data from a remote HTTP endpoint with the provided headers and de-serialize to the provided type.
 * There are no guarantees the response will conform to the contract defined by T.
 * It is up to the consumer to ensure the provided T captures all possible response types
 * from the provided endpoint.
 *
 * @param options - HTTP request options
 */
declare const fetchJSON: <T>(options: RequestOptions) => Promise<T>;
export { fetch, fetchJSON, fetchString };
